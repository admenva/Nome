/*! nome - v0.0.1 - 2014-06-03
 * Copyright (c) 2014 Ramon Lamana; Licensed MIT */
!function(a){var b,c;!function(){var a={},d={};b=function(b,c,d){a[b]={deps:c,callback:d}},c=function(b){if(d[b])return d[b];d[b]={};var e=a[b];if(!e)throw new Error("Module '"+b+"' not found.");for(var f,g=e.deps,h=e.callback,i=[],j=0,k=g.length;k>j;j++)i.push("exports"===g[j]?f={}:c(g[j]));var l=h.apply(this,i);return d[b]=f||l}}(),b(["emitter","extend"],function(a,b){"use strict";a&&a.__esModule||(a={"default":a}),b&&b.__esModule||(b={"default":b});var c=$traceurRuntime.assertObject(a).default,d=$traceurRuntime.assertObject(b).default,e=function(){c.apply(this),this.connected=!1};e.prototype=d(c.prototype,{get connected(){return this._connected},set connected(a){"undefined"==typeof this._connected&&(this._connected=a)},connect:function(a,b){var c;return b=b||"5555",a=a||"127.0.0.1",c=this._websocket=new WebSocket("ws://"+a+":"+b),c.onerror=function(){console.error("Could not connected to Monode server @ "+a+":"+b)},c.onopen=function(){this._connected=!0,console.log("Connected to Monode server @ "+a+":"+b),this.emit("connected")}.bind(this),c.onmessage=function(a){a=JSON.parse(a.data),a.event&&this.emit.apply(this,[a.event].concat(a.args))}.bind(this),this},led:function(a,b,c){this.connected?this._websocket.send(JSON.stringify({method:"led",args:[a,b,c]})):console.warn("led: Not connected to any Monode server")},_websocket:null});var f=e;return{get default(){return f},__esModule:!0}}),b([],function(){"use strict";function a(){this._listeners={}}function b(a,b,c){return function(d){return(d.funct===a&&d.scope===b)===c}}function c(a,c,d,e){return a[c]?a[c].some(b(d,e,!0)):!1}a.prototype={on:function(a,b,d){var e=this._listeners;c(e,a,b,d)||(e[a]||(e[a]=[]),e[a].push({funct:b,scope:d}))},off:function(a,c,d){var e=this._listeners[a];e&&(this._listeners[a]=e.filter(b(c,d,!1)))},once:function(a,b,d){c(this._listeners,a,b,d)||this.on(a,function e(){this.off(a,e,this),b.apply(d,arguments)},this)},emit:function(a){var b=this._listeners[a];if(b){var c=Array.prototype.slice.call(arguments,1);b.forEach(function(a){a.funct.apply(a.scope,c)})}}};var d=a;return{get default(){return d},__esModule:!0}}),b([],function(){"use strict";function a(){var a={};return Array.prototype.slice.call(arguments,0).forEach(function(b){"function"==typeof b&&(b=b.prototype),Object.keys(b).forEach(function(c){a[c]=Object.getOwnPropertyDescriptor(b,c)})}),Object.create(Object.prototype,a)}var b=a;return{get default(){return b},__esModule:!0}}),b(["device"],function(a){"use strict";a&&a.__esModule||(a={"default":a});var b=$traceurRuntime.assertObject(a).default;return{get Device(){return b},__esModule:!0}}),"function"==typeof b&&b.amd?b(nome):a.Nome=c("nome")}(this);