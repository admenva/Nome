/*! nome - v0.0.1 - 2013-11-13
 * Copyright (c) 2013 Ramon Lamana; Licensed MIT */
!function(a){define("client",["emitter","extend"],function(a,b){"use strict";var c=a["default"],d=b["default"],e=require("ws"),f=function(){c.apply(this),this.connected=!1};f.prototype=d(c.prototype,{get connected(){return this._connected},set connected(a){"undefined"==typeof this._connected&&(this._connected=a)},connect:function(a,b){var c;return b=b||"5555",a=a||"127.0.0.1",c=this._websocket=new e("ws://"+a+":"+b),c.on("error",function(){console.error("Could not connected to Monode server @ "+a+":"+b)}),c.on("open",function(){this._connected=!0,console.log("Connected to Monode server @ "+a+":"+b),this.emit("connected")}.bind(this)),c.on("message",function(a){a=JSON.parse(a),a.event&&this.emit.apply(this,[a.event].concat(a.args))}.bind(this)),this},led:function(a,b,c){this.connected?this._websocket.send(JSON.stringify({method:"led",args:[a,b,c]})):console.warn("led: Not connected to any Monode server")},_websocket:null});var g=new f;g.connect().on("connected",function(){});var h={};g.on("key",function(a,b,c){var d=a+""+b;c&&(console.log("KEY: ",a,b),h[d]||(h[d]=0),h[d]=!h[d],g.led(a,b,h[d]))})}),define("emitter",["exports"],function(a){"use strict";function b(){this._listeners={}}function c(a,b,c){return function(d){return(d.funct===a&&d.scope===b)===c}}function d(a,b,d,e){return a[b]?a[b].some(c(d,e,!0)):!1}b.prototype={on:function(a,b,c){var e=this._listeners;d(e,a,b,c)||(e[a]||(e[a]=[]),e[a].push({funct:b,scope:c}))},off:function(a,b,d){var e=this._listeners[a];e&&(this._listeners[a]=e.filter(c(b,d,!1)))},once:function(a,b,c){d(this._listeners,a,b,c)||this.on(a,function e(){this.off(a,e,this),b.apply(c,arguments)},this)},emit:function(a){var b=this._listeners[a];if(b){var c=Array.prototype.slice.call(arguments,1);b.forEach(function(a){a.funct.apply(a.scope,c)})}}},a["default"]=b}),define("extend",["exports"],function(a){"use strict";function b(){var a={};return Array.prototype.slice.call(arguments,0).forEach(function(b){"function"==typeof b&&(b=b.prototype),Object.keys(b).forEach(function(c){var d=Object.getOwnPropertyDescriptor(b,c);Object.defineProperty(a,c,d)})}),a}a["default"]=b}),"function"==typeof define&&define.amd?define(nome):a.Nome=require("nome")}(this);